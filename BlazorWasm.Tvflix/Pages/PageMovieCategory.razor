@inject MovieCategoryListService MovieCategoryListService
@if (Data is not null)
{
    <section class="movie-list genre-list" aria-label="@Data.genre_name Movies">
        <div class="title-wrapper">
            <h1 class="heading">All @Data.genre_name Movies</h1>
        </div>
        <div class="grid-list">
            @foreach (var item in Data.results)
            {
                string url = $"https://image.tmdb.org/t/p/w342{item.poster_path}";
                <div class="movie-card">
                    <figure class="poster-box card-banner">
                        <img src="@url" alt="@item.title" class="img-cover" loading="lazy">
                    </figure>

                    <h4 class="title">@item.original_title</h4>

                    <div class="meta-list">
                        <div class="meta-item">
                            <img src="assets/images/star.png" width="20" height="20" loading="lazy" alt="rating">

                            <span class="span">@item.vote_average</span>
                        </div>

                        <div class="card-badge">
                            @(string.IsNullOrWhiteSpace(item.release_date) ? "N/A" : item.release_date.Split('-')[0])
                        </div>
                    </div>

                    <a href="javascript:void(0);" class="card-btn" title="Barbie" @onclick="() => WatchNowClick(item.id)"></a>
                </div>
            }
        </div>
        <div class="d-flex flex-column align-center">
            <MudPagination SelectedChanged="PageChanged"
                           Count="Data.total_pages"
                           Class="pa-4 mt-5"/>
        </div>
        @* <button class="btn load-more" load-more="">Load More</button> *@
    </section>
}


@code {

    [Parameter]
    public MovieCategoryList? Data { get; set; }

    [Parameter]
    public EventCallback<int> WatchNow { get; set; }

    private int _genreId;

    protected override void OnInitialized()
    {
        _genreId = Data.genre_id;
    }

    private async Task WatchNowClick(int id)
    {
        await WatchNow.InvokeAsync(id);
    }

    private async Task PageChanged(int i)
    {
        if (Data != null)
        {
            var item = await MovieCategoryListService.GetAsync(ApiKey.Value, _genreId, i);
            if (item is not null)
            {
                Data = item;
                StateHasChanged();
            }
        }
    }

}